
services:
  core-service:
    build:
      context: ./core-service
    env_file:
      - ./core-service/.env
    volumes:
      - ./core-service:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - blog_network
      
  comments-service:
    build:
      context: ./comments-service
    env_file:
      - ./comments-service/.env
    volumes:
      - ./comments-service:/app
    ports:
      - "8001:8001"
    depends_on:
      db_comments:
        condition: service_healthy
    networks:
      - blog_network

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./frontend:/app
    env_file:
      - ./frontend/.env     
    ports:
      - "8080:8080"
    depends_on:
      - core-service
      - comments-service
    networks:
      - blog_network

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./shared.env
    ports:
      - "5432:5432"
    networks:
      - blog_network

  db_comments:
    image: mysql:8
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - ./shared.env
    ports:
      - "3306:3306"
    networks:
      - blog_network
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "--execute", "SHOW DATABASES;"]
      interval: 3s
      retries: 5
      timeout: 5s

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - blog_network
  
volumes:
  postgres_data:
  mysql_data:

networks:
  blog_network:
    driver: bridge